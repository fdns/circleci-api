/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

/// TriggerPipelineParameters : The information you can supply when triggering a pipeline.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TriggerPipelineParameters {
    /// The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive. To trigger a pipeline for a PR by number use `pull/<number>/head` for the PR ref or `pull/<number>/merge` for the merge ref (GitHub only).
    #[serde(rename = "branch", skip_serializing_if = "Option::is_none")]
    pub branch: Option<String>,
    /// The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    /// An object containing pipeline parameters and their values.
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<
        ::std::collections::HashMap<String, crate::models::ContinuePipelineRequestParametersValue>,
    >,
}

impl TriggerPipelineParameters {
    /// The information you can supply when triggering a pipeline.
    pub fn new() -> TriggerPipelineParameters {
        TriggerPipelineParameters {
            branch: None,
            tag: None,
            parameters: None,
        }
    }
}
