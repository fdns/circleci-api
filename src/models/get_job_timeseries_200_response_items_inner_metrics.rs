/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

/// GetJobTimeseries200ResponseItemsInnerMetrics : Metrics relating to a workflow's runs.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetJobTimeseries200ResponseItemsInnerMetrics {
    /// The total number of runs, including runs that are still on-hold or running.
    #[serde(rename = "total_runs")]
    pub total_runs: i64,
    /// The number of failed runs.
    #[serde(rename = "failed_runs")]
    pub failed_runs: i64,
    /// The number of successful runs.
    #[serde(rename = "successful_runs")]
    pub successful_runs: i64,
    /// The average number of runs per day.
    #[serde(rename = "throughput")]
    pub throughput: f32,
    /// The median credits consumed over the current timeseries interval.
    #[serde(rename = "median_credits_used")]
    pub median_credits_used: i64,
    /// The total credits consumed over the current timeseries interval.
    #[serde(rename = "total_credits_used")]
    pub total_credits_used: i64,
    #[serde(rename = "duration_metrics")]
    pub duration_metrics:
        Box<crate::models::GetJobTimeseries200ResponseItemsInnerMetricsDurationMetrics>,
}

impl GetJobTimeseries200ResponseItemsInnerMetrics {
    /// Metrics relating to a workflow's runs.
    pub fn new(
        total_runs: i64,
        failed_runs: i64,
        successful_runs: i64,
        throughput: f32,
        median_credits_used: i64,
        total_credits_used: i64,
        duration_metrics: crate::models::GetJobTimeseries200ResponseItemsInnerMetricsDurationMetrics,
    ) -> GetJobTimeseries200ResponseItemsInnerMetrics {
        GetJobTimeseries200ResponseItemsInnerMetrics {
            total_runs,
            failed_runs,
            successful_runs,
            throughput,
            median_credits_used,
            total_credits_used,
            duration_metrics: Box::new(duration_metrics),
        }
    }
}
