/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

/// CheckoutKey : A checkout key

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CheckoutKey {
    /// A public SSH key.
    #[serde(rename = "public-key")]
    pub public_key: String,
    /// The type of checkout key. This may be either `deploy-key` or `github-user-key`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// An SSH key fingerprint.
    #[serde(rename = "fingerprint")]
    pub fingerprint: String,
    /// A boolean value that indicates if this key is preferred.
    #[serde(rename = "preferred")]
    pub preferred: bool,
    /// The date and time the checkout key was created.
    #[serde(rename = "created-at")]
    pub created_at: String,
}

impl CheckoutKey {
    /// A checkout key
    pub fn new(
        public_key: String,
        r#type: Type,
        fingerprint: String,
        preferred: bool,
        created_at: String,
    ) -> CheckoutKey {
        CheckoutKey {
            public_key,
            r#type,
            fingerprint,
            preferred,
            created_at,
        }
    }
}

/// The type of checkout key. This may be either `deploy-key` or `github-user-key`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "deploy-key")]
    DeployKey,
    #[serde(rename = "github-user-key")]
    GithubUserKey,
}

impl Default for Type {
    fn default() -> Type {
        Self::DeployKey
    }
}
