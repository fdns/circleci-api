/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

/// GetWorkflowSummary200ResponseMetrics : Metrics aggregated across a workflow for a given time window.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetWorkflowSummary200ResponseMetrics {
    /// The total number of runs, including runs that are still on-hold or running.
    #[serde(rename = "total_runs")]
    pub total_runs: i64,
    /// The number of successful runs.
    #[serde(rename = "successful_runs")]
    pub successful_runs: i64,
    /// The mean time to recovery (mean time between failures and their next success) in seconds.
    #[serde(rename = "mttr", deserialize_with = "Option::deserialize")]
    pub mttr: Option<i64>,
    /// The total credits consumed by the workflow in the aggregation window. Note that Insights is not a real time financial reporting tool and should not be used for credit reporting.
    #[serde(
        rename = "total_credits_used",
        deserialize_with = "Option::deserialize"
    )]
    pub total_credits_used: Option<i64>,
    /// The number of failed runs.
    #[serde(rename = "failed_runs")]
    pub failed_runs: i64,
    #[serde(rename = "success_rate")]
    pub success_rate: f32,
    /// The number of runs that ran to completion within the aggregation window
    #[serde(rename = "completed_runs", deserialize_with = "Option::deserialize")]
    pub completed_runs: Option<i64>,
    /// The timestamp of the first build within the requested reporting window.
    #[serde(rename = "window_start")]
    pub window_start: String,
    #[serde(rename = "duration_metrics")]
    pub duration_metrics:
        Box<crate::models::GetProjectWorkflowMetrics200ResponseItemsInnerMetricsDurationMetrics>,
    /// The timestamp of the last build within the requested reporting window.
    #[serde(rename = "window_end")]
    pub window_end: String,
    /// The average number of runs per day.
    #[serde(rename = "throughput")]
    pub throughput: f32,
}

impl GetWorkflowSummary200ResponseMetrics {
    /// Metrics aggregated across a workflow for a given time window.
    pub fn new(
        total_runs: i64,
        successful_runs: i64,
        mttr: Option<i64>,
        total_credits_used: Option<i64>,
        failed_runs: i64,
        success_rate: f32,
        completed_runs: Option<i64>,
        window_start: String,
        duration_metrics: crate::models::GetProjectWorkflowMetrics200ResponseItemsInnerMetricsDurationMetrics,
        window_end: String,
        throughput: f32,
    ) -> GetWorkflowSummary200ResponseMetrics {
        GetWorkflowSummary200ResponseMetrics {
            total_runs,
            successful_runs,
            mttr,
            total_credits_used,
            failed_runs,
            success_rate,
            completed_runs,
            window_start,
            duration_metrics: Box::new(duration_metrics),
            window_end,
            throughput,
        }
    }
}
