/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateContextRequestOwner {
    /// The unique ID of the owner of the context. Specify either this or slug.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// The type of the owner. Defaults to \"organization\". Accounts are only used as context owners in server.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    /// A string that represents an organization. Specify either this or id. Cannot be used for accounts.
    #[serde(rename = "slug")]
    pub slug: String,
}

impl CreateContextRequestOwner {
    pub fn new(id: uuid::Uuid, slug: String) -> CreateContextRequestOwner {
        CreateContextRequestOwner {
            id,
            r#type: None,
            slug,
        }
    }
}

/// The type of the owner. Defaults to \"organization\". Accounts are only used as context owners in server.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "account")]
    Account,
    #[serde(rename = "organization")]
    Organization,
}

impl Default for Type {
    fn default() -> Type {
        Self::Account
    }
}
