/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

/// Schedule : A schedule response

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Schedule {
    /// The unique ID of the schedule.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "timetable")]
    pub timetable: Box<crate::models::ScheduleTimetable>,
    /// The date and time the pipeline was last updated.
    #[serde(rename = "updated-at")]
    pub updated_at: String,
    /// Name of the schedule.
    #[serde(rename = "name")]
    pub name: String,
    /// The date and time the pipeline was created.
    #[serde(rename = "created-at")]
    pub created_at: String,
    /// The project-slug for the schedule
    #[serde(rename = "project-slug")]
    pub project_slug: String,
    /// Pipeline parameters represented as key-value pairs. Must contain branch or tag.
    #[serde(rename = "parameters")]
    pub parameters:
        ::std::collections::HashMap<String, crate::models::ContinuePipelineRequestParametersValue>,
    #[serde(rename = "actor")]
    pub actor: Box<crate::models::User1>,
    /// Description of the schedule.
    #[serde(rename = "description", deserialize_with = "Option::deserialize")]
    pub description: Option<String>,
}

impl Schedule {
    /// A schedule response
    pub fn new(
        id: uuid::Uuid,
        timetable: crate::models::ScheduleTimetable,
        updated_at: String,
        name: String,
        created_at: String,
        project_slug: String,
        parameters: ::std::collections::HashMap<
            String,
            crate::models::ContinuePipelineRequestParametersValue,
        >,
        actor: crate::models::User1,
        description: Option<String>,
    ) -> Schedule {
        Schedule {
            id,
            timetable: Box::new(timetable),
            updated_at,
            name,
            created_at,
            project_slug,
            parameters,
            actor: Box::new(actor),
            description,
        }
    }
}
