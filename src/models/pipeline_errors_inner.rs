/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

/// PipelineErrorsInner : An error with a type and message.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PipelineErrorsInner {
    /// The type of error.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// A human-readable error message.
    #[serde(rename = "message")]
    pub message: String,
}

impl PipelineErrorsInner {
    /// An error with a type and message.
    pub fn new(r#type: Type, message: String) -> PipelineErrorsInner {
        PipelineErrorsInner { r#type, message }
    }
}

/// The type of error.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "config")]
    Config,
    #[serde(rename = "config-fetch")]
    ConfigFetch,
    #[serde(rename = "timeout")]
    Timeout,
    #[serde(rename = "permission")]
    Permission,
    #[serde(rename = "other")]
    Other,
    #[serde(rename = "plan")]
    Plan,
}

impl Default for Type {
    fn default() -> Type {
        Self::Config
    }
}
