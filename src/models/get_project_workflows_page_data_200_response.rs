/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v2
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetProjectWorkflowsPageData200Response {
    /// The unique ID of the organization
    #[serde(
        rename = "org_id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub org_id: Option<Option<serde_json::Value>>,
    /// The unique ID of the project
    #[serde(
        rename = "project_id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub project_id: Option<Option<serde_json::Value>>,
    #[serde(rename = "project_data", skip_serializing_if = "Option::is_none")]
    pub project_data: Option<Box<crate::models::GetProjectWorkflowsPageData200ResponseProjectData>>,
    /// A list of metrics and trends data for workflows for a given project.
    #[serde(
        rename = "project_workflow_data",
        skip_serializing_if = "Option::is_none"
    )]
    pub project_workflow_data:
        Option<Vec<crate::models::GetProjectWorkflowsPageData200ResponseProjectWorkflowDataInner>>,
    /// A list of metrics and trends data for branches for a given project.
    #[serde(
        rename = "project_workflow_branch_data",
        skip_serializing_if = "Option::is_none"
    )]
    pub project_workflow_branch_data: Option<
        Vec<crate::models::GetProjectWorkflowsPageData200ResponseProjectWorkflowBranchDataInner>,
    >,
    /// A list of all the branches for a given project.
    #[serde(rename = "all_branches", skip_serializing_if = "Option::is_none")]
    pub all_branches: Option<Vec<String>>,
    /// A list of all the workflows for a given project.
    #[serde(rename = "all_workflows", skip_serializing_if = "Option::is_none")]
    pub all_workflows: Option<Vec<String>>,
}

impl GetProjectWorkflowsPageData200Response {
    pub fn new() -> GetProjectWorkflowsPageData200Response {
        GetProjectWorkflowsPageData200Response {
            org_id: None,
            project_id: None,
            project_data: None,
            project_workflow_data: None,
            project_workflow_branch_data: None,
            all_branches: None,
            all_workflows: None,
        }
    }
}
